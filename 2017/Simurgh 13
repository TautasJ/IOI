#include "simurgh.h"
#include <bits/stdc++.h>
using namespace std;
int par[501];
int sz[501];
void init()
{
	for (int i = 0; i <= 500; i++)
	{
		par[i] = i;
		sz[i] = 1;
	}
}
int root(int a)
{
	while (par[a] != a)
		a = par[a];
	return a;
}
bool merge(int a, int b)
{
	if (root(a) == root(b))
		return false;
	if (sz[root(a)] > sz[root(b)])
		swap(a, b);
	sz[root(b)] += sz[root(a)];
	par[root(a)] = root(b);
	return true;
}
std::vector<int> find_roads(int n, std::vector<int> u, std::vector<int> v) {
	srand(1000);
	int m = u.size();
	vector<int>x;
	for (int i = 0; i < m; i++)
	{
		x.push_back(i);
	}
	while (true)
	{
		random_shuffle(x.begin(), x.end());
		vector<int>nep;
		init();
		for (int j : x)
		{
			if (merge(u[j], v[j]))
				nep.push_back(j);
		}
		int c = count_common_roads(nep);
		if (c == n - 1)
			return nep;
	}
}/*
int main()
{

}*/
