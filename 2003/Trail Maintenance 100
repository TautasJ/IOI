/*input
4 6
1 2 10
1 3 8
3 2 3
1 4 3
1 3 6
2 1 2
*/
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
struct DSU
{
	vector<int> pa;
	DSU()
	{
		pa = vector<int>(303);
		for (int i = 0; i < 303; i++)
			pa[i] = i;
	}
	int root(int i)
	{
		if (i == pa[i])
			return i;
		return pa[i] = root(pa[i]);
	}
	int merge(int a, int b)
	{
		if (rand() % 2 == 0)
			swap(a, b);
		a = root(a);
		b = root(b);
		if (a == b)
			return 0;
		pa[a] = b;
		return 1;
	}
};
int main()
{
	int N, W;
	cin >> N >> W;
	set<pair<int, pair<int, int>>>Q;
	while (W--)
	{
		int a, b, w;
		cin >> a >> b >> w;
		Q.insert({w, {a, b}});
		int ans = 0;
		DSU X;
		for (pair<int, pair<int, int>>i : Q)
			ans += i.first * X.merge(i.second.first, i.second.second);
		for (int i = 1; i <= N; i++)
			if (X.root(i) != X.root(1))
				ans = -1;
		cout << ans << "\n" << flush;
	}
}
