/*input


*/
#include <bits/stdc++.h>
using namespace std;
const long long INF = 1e17;
long long plan_roller_coaster(vector<int> s, vector<int> t)
{
	int n = s.size();
	long long dp[(1 << n)][n];
	for (int msk = 0; msk < (1 << n); msk++)
	{
		for (int i = 0; i < n; i++)
		{
			dp[msk][i] = INF;
		}
	}
	for (int i = 0; i < n; i++)
	{
		dp[1 << i][i] = 0;
	}
	for (int msk = 0; msk < (1 << n); msk++)
	{
		for (int i = 0; i < n; i++)
		{
			if (((msk) & (1 << i)) == 0)
				continue;
			for (int j = 0; j < n; j++)
			{
				if (((msk) & (1 << j)) > 0)
					continue;
				dp[msk | (1 << j)][j] =
				    min(
				        dp[msk | (1 << j)][j],
				        dp[msk][i] + max(0ll, ((long long)(t[i] - s[j])))
				    );
			}
		}
	}
	long long ans = INF;
	for (int i = 0; i < n; i++)
		ans = min(ans, dp[(1 << n) - 1][i]);
	return ans;
}/*
int main()
{
	cout << plan_roller_coaster({1, 4, 5, 6}, {7, 3, 8, 6}) << endl;
}/**/
